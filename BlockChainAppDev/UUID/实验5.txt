实验5：基于数据库号码段生成用户ID

一、实验目的
1.理解号段生成ID的策略：掌握基于数据库号码段生成用户ID的原理，理解如何使用步长和最大ID来确保ID的连续性和唯一性。 
2.掌握数据库操作：能够通过SQL查询和事务操作从`id_generator`表中获取并更新号码段，安全高效地生成唯一ID。
3.提高并发安全性：掌握如何在高并发环境下使用数据库事务或锁来避免ID冲突，确保生成的ID在多个实例中是唯一的。
4.优化ID生成性能：通过合理设计号码段步长和最大ID，减少数据库查询次数，提高ID生成的效率，避免数据库成为瓶颈。
5.掌握分布式ID生成：在分布式系统中，设计合理的ID生成策略，保证每个服务实例生成的ID是唯一的，避免跨服务ID冲突。
二、实验原理
1.号段生成原理：通过`id_generator`表中的`max_id`和`step`来分配每个ID生成请求的号码段。每次查询时，通过事务读取`max_id`，并将其更新为下一个最大ID，从而生成唯一的ID。
2.事务控制与并发安全：使用事务操作保证每次ID生成过程的原子性，避免多个请求同时获取到相同的ID。可以使用数据库锁（如行级锁）确保在高并发环境下ID的唯一性。
3.性能优化：通过合理配置`step`（号段步长），减少频繁更新`max_id`的次数，从而降低数据库操作的频率，提高生成ID的效率。
4.分布式系统设计：在分布式环境中，可以通过`biz_type`区分不同业务的ID生成，确保不同业务之间生成的ID不会冲突。
三、实验仪器材料
1.计算机：运行Windows、Linux或macOS操作系统的计算机。
2.Go语言环境：已安装并配置好Go语言环境，包括GOPATH、GOROOT等环境变量的设置。
3.文本编辑器或IDE：如VS Code、GoLand等，用于编写Go代码。
4.MySQL环境：已安装并配置好 MySQL 数据库。
5.数据库客户端：如Navicat Premium 16，用于查看和管理数据库。
